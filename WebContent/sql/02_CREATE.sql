/* 회원 */
CREATE TABLE MEMBER (
	EMAIL VARCHAR2(100) NOT NULL, /* 이메일 */
	NAME VARCHAR2(30), /* 이름 */
	PWD VARCHAR2(30) /* 비밀번호 */
);
ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (EMAIL);


/* 업종 */
CREATE TABLE CATEGORY (
	C_CODE NUMBER NOT NULL, /* 업종코드 */
	C_NAME VARCHAR2(80) /* 업종명 */
);
ALTER TABLE CATEGORY ADD CONSTRAINT PK_CATEGORY PRIMARY KEY (C_CODE);
/* 지역 */
CREATE TABLE LOC (
	LOC_CODE NUMBER NOT NULL, /* 지역코드 */
	LOC_ADDR1 VARCHAR2(30), /* 행정구역 */
	LOC_ADDR2 VARCHAR2(30) /* 시군구 */
);
ALTER TABLE LOC ADD CONSTRAINT PK_LOC PRIMARY KEY (LOC_CODE);


/* 맛집 */
CREATE TABLE HOTPLACE (
	H_CODE NUMBER NOT NULL, /* 맛집코드 */
	H_NAME VARCHAR2(100), /* 가게명 */
	C_CODE NUMBER, /* 업종코드 */
	LOC_CODE NUMBER, /* 지역코드 */
	H_ADDRESS VARCHAR2(200), /* 상세주소 */
	H_INFO VARCHAR2(500), /* 매장소개 */
	H_TEL VARCHAR2(50), /* 전화번호 */
	H_TIME VARCHAR2(100), /* 영업시간 */
	H_MENU VARCHAR2(400), /* 대표메뉴 */
	H_IMG1 VARCHAR2(100), /* 이미지1 */
	H_IMG2 VARCHAR2(100), /* 이미지2 */
	H_IMG3 VARCHAR2(100), /* 이미지3 */
	H_DATE DATE, /* 작성일자 */
	H_READNUM NUMBER, /* 조회수 */
	H_GRADE NUMBER(5,1), /* 평점 */
	EMAIL VARCHAR2(100) /* 이메일 */
);
ALTER TABLE HOTPLACE ADD CONSTRAINT PK_HOTPLACE PRIMARY KEY (H_CODE);

/* 맛집 댓글 */
CREATE TABLE H_REPLY (
	HR_IDX NUMBER NOT NULL, /* 인덱스 */
	HR_CONTENT VARCHAR2(300), /* 내용 */
	HR_DATE DATE, /* 작성일자 */
	H_CODE NUMBER, /* 맛집코드 */
	EMAIL VARCHAR2(100) /* 이메일 */
);
ALTER TABLE H_REPLY ADD CONSTRAINT PK_H_REPLY PRIMARY KEY (HR_IDX);



/* 게시판 */
CREATE TABLE BOARD (
	B_CODE NUMBER NOT NULL, /* 게시판코드 */
	B_TITLE VARCHAR2(100), /* 제목 */
	C_CODE NUMBER, /* 업종코드 */
	B_ADDRESS VARCHAR2(200), /* 지역 */
	B_CONTENT VARCHAR2(500), /* 본문 */
	B_IMG1 VARCHAR2(100), /* 이미지1 */
	B_IMG2 VARCHAR2(100), /* 이미지2 */
	B_IMG3 VARCHAR2(100), /* 이미지3 */
	B_DATE DATE, /* 작성일자 */
	B_READNUM NUMBER, /* 조회수 */
	EMAIL VARCHAR2(100) /* 이메일 */
);
ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (B_CODE);

/* 게시판 댓글 */
CREATE TABLE B_REPLY (
	BR_IDX NUMBER NOT NULL, /* 인덱스 */
	BR_CONTENT VARCHAR2(300), /* 내용 */
	BR_DATE DATE, /* 작성일자 */
	BR_REFER NUMBER, /* 부모 */
	BR_LEV NUMBER, /* 깊이 */
	BR_ORDER NUMBER, /* 순번 */
	B_CODE NUMBER, /* 게시판코드 */
	EMAIL VARCHAR2(100) /* 이메일 */
);
ALTER TABLE B_REPLY ADD CONSTRAINT PK_B_REPLY PRIMARY KEY (BR_IDX);



ALTER TABLE BOARD ADD CONSTRAINT FK_CATEGORY_TO_BOARD FOREIGN KEY (C_CODE) REFERENCES CATEGORY (C_CODE);
ALTER TABLE BOARD ADD CONSTRAINT FK_MEMBER_TO_BOARD FOREIGN KEY (EMAIL) REFERENCES MEMBER (EMAIL);

ALTER TABLE HOTPLACE ADD CONSTRAINT FK_LOC_TO_HOTPLACE FOREIGN KEY (LOC_CODE) REFERENCES LOC (LOC_CODE);
ALTER TABLE HOTPLACE ADD CONSTRAINT FK_CATEGORY_TO_HOTPLACE FOREIGN KEY (C_CODE) REFERENCES CATEGORY (C_CODE);
ALTER TABLE HOTPLACE ADD CONSTRAINT FK_MEMBER_TO_HOTPLACE FOREIGN KEY (EMAIL) REFERENCES MEMBER (EMAIL);

ALTER TABLE H_REPLY ADD CONSTRAINT FK_HOTPLACE_TO_H_REPLY FOREIGN KEY (H_CODE) REFERENCES HOTPLACE (H_CODE) ON DELETE CASCADE;
ALTER TABLE H_REPLY ADD CONSTRAINT FK_MEMBER_TO_H_REPLY FOREIGN KEY (EMAIL) REFERENCES MEMBER (EMAIL) ON DELETE CASCADE;

ALTER TABLE B_REPLY ADD CONSTRAINT FK_BOARD_TO_B_REPLY FOREIGN KEY (B_CODE) REFERENCES BOARD (B_CODE) ON DELETE CASCADE;

ALTER TABLE B_REPLY ADD CONSTRAINT FK_MEMBER_TO_B_REPLY FOREIGN KEY (EMAIL) REFERENCES MEMBER (EMAIL) ON DELETE CASCADE;